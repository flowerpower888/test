{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","data","useState","filtered","setFiltered","inputValue","setInputValue","isChecked","setIsChecked","useEffect","handleClick","e","target","id","isNaN","filter","x","length","includes","toLowerCase","onSubmit","preventDefault","type","name","onChange","value","onClick","map","word","App","setData","fetch","proxyurl","then","res","json","dogs","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEaA,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACAC,mBAASD,GADT,mBACzBE,EADyB,KACfC,EADe,OAEIF,qBAFJ,mBAEzBG,EAFyB,KAEbC,EAFa,OAGEJ,oBAAS,GAHX,mBAGzBK,EAHyB,KAGdC,EAHc,KAKhCC,qBAAU,WACRL,EAAYH,KACX,IAEH,IAAMS,EAAc,SAACC,GACnB,GAAoB,WAAhBA,EAAEC,OAAOC,GAAiB,CAC5B,GAAIC,OAAOT,GACT,OAEFD,EAAYH,EAAKc,QAAO,SAACC,GAAD,OAAOA,EAAEC,OAASZ,WACrC,GAAoB,WAAhBM,EAAEC,OAAOC,GAAiB,CACnC,IAAKC,OAAOT,GACV,OAEFD,EACEH,EAAKc,QAAO,SAACC,GAAD,OACVT,EACIS,EAAEE,SAASb,GACXW,EAAEG,cAAcD,SAASb,EAAWc,qBAchD,OACE,uBAAMC,SAAU,SAACT,GAAD,OAAOA,EAAEU,kBAAzB,UACE,8BACE,uBAAOC,KAAK,OAAOC,KAAK,GAAGV,GAAG,GAAGW,SAXlB,SAACb,GACpBL,EAAcK,EAAEC,OAAOa,UAWnB,kCACE,uBAAOD,SATK,SAACb,GACnBH,GAAa,SAACD,GAAD,OAAgBA,MAQOe,KAAK,WAAWC,KAAK,KADrD,uBAKF,8BACE,wBAAQD,KAAK,SAAST,GAAG,SAASa,QAAShB,EAA3C,oBAGA,wBAAQY,KAAK,SAAST,GAAG,SAASa,QAAShB,EAA3C,uBAIF,6BAAKP,GAAYA,EAASwB,KAAI,SAACC,GAAD,OAAU,6BAAgBA,GAAPA,Y,MClCxCC,MAlBf,WAAgB,IAAD,EACW3B,qBADX,mBACND,EADM,KACA6B,EADA,KAWb,OARArB,qBAAU,WAGRsB,MAAMC,uEACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,EAAKnC,WAC5B,CAACA,IAGF,qBAAKoC,UAAU,YAAf,SACE,cAAC,EAAD,CAAMpC,KAAMA,OCLHqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.23a29f5e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const Form = ({ data }) => {\r\n  const [filtered, setFiltered] = useState(data);\r\n  const [inputValue, setInputValue] = useState();\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFiltered(data);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.id === \"length\") {\r\n      if (isNaN(+inputValue)) {\r\n        return;\r\n      }\r\n      setFiltered(data.filter((x) => x.length > inputValue));\r\n    } else if (e.target.id === \"substr\") {\r\n      if (!isNaN(+inputValue)) {\r\n        return;\r\n      }\r\n      setFiltered(\r\n        data.filter((x) =>\r\n          isChecked\r\n            ? x.includes(inputValue)\r\n            : x.toLowerCase().includes(inputValue.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleCheck = (e) => {\r\n    setIsChecked((isChecked) => !isChecked);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => e.preventDefault()}>\r\n      <p>\r\n        <input type=\"text\" name=\"\" id=\"\" onChange={handleChange} />\r\n        <label>\r\n          <input onChange={handleCheck} type=\"checkbox\" name=\"\" />\r\n          case sensitive\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <button type=\"button\" id=\"length\" onClick={handleClick}>\r\n          length\r\n        </button>\r\n        <button type=\"button\" id=\"substr\" onClick={handleClick}>\r\n          substr\r\n        </button>\r\n      </p>\r\n      <ol>{filtered && filtered.map((word) => <li key={word}>{word}</li>)}</ol>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Form } from \"./components/Form\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://www.mrsoft.by/data.json\";\n    fetch(proxyurl + url)\n      .then((res) => res.json())\n      .then(dogs => setData(dogs.data))\n  }, [data])\n\n  return (\n    <div className=\"container\">\n      <Form data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}